{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","Date","beginTime","setBegin","workTime","setWork","endTime","setEnd","utils","moment","TimePicker","value","onChange","event","ampm","orientation","autoOk","time","breakMinutes","hours","getHours","minutes","getMinutes","setHours","setMinutes","calculateEnd","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oNAyDeA,MAlDf,WAAgB,IAAD,EACiBC,mBAAS,IAAIC,KAAK,qBADnC,mBACNC,EADM,KACKC,EADL,OAEeH,mBAAS,IAAIC,KAAK,qBAFjC,mBAENG,EAFM,KAEIC,EAFJ,OAGaL,mBAAS,IAAIC,KAAK,qBAH/B,mBAGNK,EAHM,KAGGC,EAHH,KAsCb,OACE,eAAC,IAAD,CAAyBC,MAAOC,IAAhC,UACE,6CACA,cAACC,EAAA,EAAD,CAAYC,MAAOP,EAAUQ,SAbjC,SAA0BC,GACxBR,EAAQ,IAAIJ,KAAKY,KAY0CC,MAAM,EAAOC,YAAY,YAAYC,QAAM,IACpG,+CACA,cAACN,EAAA,EAAD,CAAYC,MAAOT,EAAWU,SAXlC,SAA2BC,GACzB,IAAII,EAAO,IAAIhB,KAAKY,GACpBV,EAAS,IAAIF,KAAKY,IA7BpB,SAAsBI,GACpB,IAAIC,EAAe,EAEfC,EAAQf,EAASgB,WACjBC,EAAUjB,EAASkB,cAEnBH,EAAQ,GAAgB,IAAVA,GAA2B,IAAZE,KAC/BH,EAAe,IAGF,IAAVC,GAAeE,GAAW,GAAMF,EAAQ,KAC3CD,EAAe,GAEXC,GAAS,GAAKE,GAAW,IAC3BH,GAAgB,KAIpBD,EAAKM,SAASN,EAAKG,WAAaD,GAChCF,EAAKO,WAAWP,EAAKK,aAAeD,EAAUH,GAC9CX,EAAOU,GAUPQ,CAAaR,IAQgDH,MAAM,EAAOC,YAAY,YAAYC,QAAM,IACtG,6CACA,cAACN,EAAA,EAAD,CAAYC,MAAOL,EAASQ,MAAM,QCxCzBY,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.e81ed94f.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport moment from '@date-io/moment';\nimport {\n  TimePicker,\n  MuiPickersUtilsProvider,\n} from '@material-ui/pickers';\n\nfunction App() {\n  const [beginTime, setBegin] = useState(new Date('2017-05-24T07:00'));\n  const [workTime, setWork] = useState(new Date('2017-05-24T08:00'));\n  const [endTime, setEnd] = useState(new Date('2017-05-24T15:30'));\n\n  function calculateEnd(time) {\n    let breakMinutes = 0;\n\n    let hours = workTime.getHours();\n    let minutes = workTime.getMinutes();\n\n    if (hours < 6 || (hours === 6 && minutes === 0)) {\n      breakMinutes = 0;\n    }\n\n    if ((hours === 6 && minutes >= 1) || hours > 6) {\n      breakMinutes = 30;\n\n      if (hours >= 9 && minutes >= 1) {\n        breakMinutes += 15;\n      }\n    }\n\n    time.setHours(time.getHours() + hours);\n    time.setMinutes(time.getMinutes() + minutes + breakMinutes);\n    setEnd(time);\n  }\n\n  function handleWorkChange(event) {\n    setWork(new Date(event));\n  }\n\n  function handleBeginChange(event) {\n    let time = new Date(event);\n    setBegin(new Date(event));\n    calculateEnd(time);\n  }\n\n  return (\n    <MuiPickersUtilsProvider utils={moment}>\n      <p>Arbeitszeit:</p>\n      <TimePicker value={workTime} onChange={handleWorkChange} ampm={false} orientation=\"landscape\" autoOk/>\n      <p>Arbeitsbeginn:</p>\n      <TimePicker value={beginTime} onChange={handleBeginChange} ampm={false} orientation=\"landscape\" autoOk/>\n      <p>Arbeitsende:</p>\n      <TimePicker value={endTime} ampm={false} />\n    </MuiPickersUtilsProvider>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}